name: deploySurge
on: push
jobs:
  deploy-examples:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: cache
        id: cache
        uses: actions/cache@master
        with:
          path: |
            node_modules
            */*/node_modules
            ~/.cache
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - name: npm install + bootstrap
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: lerna link
        if: steps.cache.outputs.cache-hit == 'true'
        run: npm run link

      - run: npm run build
      - run: npm run deploy
    env:
      SURGE_LOGIN: ${{ secrets.SURGE_LOGIN }}

  notify-on-slack:
    runs-on: ubuntu-18.04
    needs: [visual-tests, content-state-tests, unit-tests, lint]
    if: always()
    steps:
      - name: Workflow Conclusion Action
        uses: technote-space/workflow-conclusion-action@v1.1.1
      - name: Notify on Slack
        uses: voxmedia/github-action-slack-notify-build@v1.1.1
        if: env.WORKFLOW_CONCLUSION == 'fail' && github.ref == 'refs/heads/notify-build-failed-on-slack'
        with:
          channel_id: GFT1VFDJ6 #rich-content-core
          status: FAILED
          color: danger
    env:
      SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
