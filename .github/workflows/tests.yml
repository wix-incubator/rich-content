name: tests
on: push
env:
  captureVideos: 'true'
  captureImages: 'true'
  APPLITOOLS_BATCH_ID: ${{ github.sha }}

jobs:
  cleanup-runs:
    runs-on: ubuntu-latest
    steps:
      - uses: rokroskar/workflow-run-cleanup-action@v0.2.2
        if: "!startsWith(github.ref, 'refs/tags/') && github.ref != 'refs/heads/master'"
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'

  e2e-visual:
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        ci_node_total: [5] # Set N number of parallel jobs you want to run tests on.
        ci_node_index: [0, 1, 2, 3, 4] # set N-1 indexes for parallel jobs

    steps:
      - uses: actions/checkout@v2
      - id: cache
        uses: actions/cache@master
        with:
          path: |
            node_modules
            */*/node_modules
            ~/.cache
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - name: npm install + bootstrap
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: lerna link
        if: steps.cache.outputs.cache-hit == 'true'
        run: npm run link
      - name: build
        run: npm run build:test
      - name: Run http server with the app in the background
        run: |
          npm run e2e:app:run &

      - name: Run tests with Knapsack Pro
        env:
          KNAPSACK_PRO_TEST_SUITE_TOKEN_CYPRESS: ${{ secrets.KNAPSACK_PRO_TEST_SUITE_TOKEN_CYPRESS }}
          KNAPSACK_PRO_CI_NODE_BUILD_ID: $(openssl rand -base64 32)
          KNAPSACK_PRO_CI_NODE_TOTAL: ${{ matrix.ci_node_total }}
          KNAPSACK_PRO_CI_NODE_INDEX: ${{ matrix.ci_node_index }}
          KNAPSACK_PRO_TEST_FILE_PATTERN: 'e2e/tests/*.e2e.js'
          APPLITOOLS_API_KEY: ${{ secrets.APPLITOOLS_API_KEY }}
          APPLITOOLS_SERVER_URL: ${{ secrets.APPLITOOLS_SERVER_URL }}
        run: |
          $(npm bin)/knapsack-pro-cypress
      - uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: cypress-screenshots-${{ matrix.ci_node_index }}
          path: e2e/cypress/screenshots
      - uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: cypress-videos-visual-${{ job.status }}-${{ matrix.ci_node_index }}
          path: e2e/cypress/videos

  e2e-visual-applitoolsSendCompletion:
    needs: e2e-visual
    if: always()
    runs-on: ubuntu-18.04
    steps:
      - name: Update Applitools batch status
        uses: wei/curl@v1.1.1
        with:
          args: -d "" -X POST https://wixeyesapi.applitools.com/api/externals/github/servers/github.com/commit/${{ env.APPLITOOLS_BATCH_ID }}/complete?apiKey=${{ secrets.APPLITOOLS_API_KEY }}

  content-state-tests:
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        ci_node_total: [3] # Set N number of parallel jobs you want to run tests on.
        ci_node_index: [0, 1, 2] # set N-1 indexes for parallel jobs

    steps:
      - uses: actions/checkout@v2
      - name: cache
        id: cache
        uses: actions/cache@master
        with:
          path: |
            node_modules
            */*/node_modules
            ~/.cache
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - name: npm install + bootstrap
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: lerna link
        if: steps.cache.outputs.cache-hit == 'true'
        run: npm run link
      - name: build
        run: npm run build:test
      - name: Run http server with the app in the background
        run: npm run e2e:app:run &

      - name: Run tests with Knapsack Pro
        env:
          KNAPSACK_PRO_TEST_SUITE_TOKEN_CYPRESS: ${{ secrets.KNAPSACK_PRO_TEST_SUITE_TOKEN_CYPRESS }}
          KNAPSACK_PRO_CI_NODE_BUILD_ID: $(openssl rand -base64 32)
          KNAPSACK_PRO_CI_NODE_TOTAL: ${{ matrix.ci_node_total }}
          KNAPSACK_PRO_CI_NODE_INDEX: ${{ matrix.ci_node_index }}
          KNAPSACK_PRO_TEST_FILE_PATTERN: 'e2e/tests/*.e2e.js'
          APPLITOOLS_IS_DISABLED: true
        run: |
          $(npm bin)/knapsack-pro-cypress --env MATCH_CONTENT_STATE=true
      - uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: cypress-screenshots-${{ matrix.ci_node_index }}
          path: e2e/cypress/screenshots
      - uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: cypress-videos-contentState-${{ job.status }}-${{ matrix.ci_node_index }}
          path: e2e/cypress/videos

  lint-and-unit-tests:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: cache
        id: cache
        uses: actions/cache@master
        with:
          path: |
            node_modules
            */*/node_modules
            ~/.cache
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - name: npm install + bootstrap
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: lerna link
        if: steps.cache.outputs.cache-hit == 'true'
        run: npm run link

      - run: npm run lint
      - run: npm run build
      - run: npm run test:unit

  notify-on-slack:
    runs-on: ubuntu-18.04
    needs: [e2e-visual, content-state-tests, lint-and-unit-tests]
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Get commit author
        id: commit-author
        run: |
          echo "::set-output name=commit-author::$(curl -s https://api.github.com/repos/wix-incubator/rich-content/commits/${{ github.sha }} | jq '.author.login' | sed 's/\"//g')"
      - name: Get PR number
        id: pr-number
        run: |
          echo "::set-output name=pr-number::$(curl -s https://api.github.com/repos/wix-incubator/rich-content/commits/${{ github.sha }} | jq '.commit.message' | sed 's/.*(#//g' | sed 's/)"//g')"
      - name: Get PR author
        id: pr-author
        run: |
          echo "::set-output name=pr-author::$(curl -s https://api.github.com/repos/wix-incubator/rich-content/pulls/${{ steps.pr-number.outputs.pr-number }} | jq '.merged_by.login' | sed 's/\"//g')"
      - name: Notify fail in Slack
        uses: voxmedia/github-action-slack-notify-build@v1.1.1
        if: needs.e2e-visual.result == 'failure' || needs.content-state-tests.result == 'failure' || needs.lint-and-unit-tests.result == 'failure'
        with:
          channel_id: C0124DH7HHS #rich-content-ci
          status: FAILED ${{ env[steps.commit-author.outputs.commit-author] }} ${{ env[steps.pr-author.outputs.pr-author] }}
          color: danger

      - name: Get previous commit
        id: previous-commit
        run: |
          echo "::set-output name=previous-commit::$(curl -s https://api.github.com/repos/wix-incubator/rich-content/commits/${{ github.sha }} | jq '.parents[0].sha' | sed 's/\"//g')"
      - name: Get previous commit status
        id: previous-status
        run: |
          echo "::set-output name=previous-status::$(curl -s https://api.github.com/repos/wix-incubator/rich-content/commits/${{ steps.previous-commit.outputs.previous-commit }}/check-suites\?app_id\=15368 -H "Accept: application/vnd.github.antiope-preview+json" | jq '.check_suites | .[] | select( .head_branch == "master") | .conclusion' | sed 's/\"//g')"
      - name: Notify recovery in Slack
        uses: voxmedia/github-action-slack-notify-build@v1.1.1
        if: steps.previous-status.outputs.previous-status != 'success success' && (needs.e2e-visual.result == 'success' && needs.content-state-tests.result == 'success' && needs.lint-and-unit-tests.result == 'success')
        with:
          channel_id: C0124DH7HHS #rich-content-ci
          status: RECOVERED
          color: '#28a745'
    env:
      SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      Barackos: <@UM3M904MU>
      barboaron: <@UMJ56Q30W>
      danarish4: <@UEBDPSU2W>
      lxgreen: <@U6FQCJ5GT>
      maimonav: <@UMUB0DSLD>
      mharsat: <@UJAAZU58B>
      noamtwix: <@UEBDQJBMG>
      oded-soffrin: <@U0MN7A3H8>
      ShamaySapir: <@UM48FG657>
      shaulgo: <@U0SDJ5S30>
      talevy17: <@UM24QHHAR>
      michael-wix: (Michael added translations)
      wix-babel-ng: (bot commit - new translations)
